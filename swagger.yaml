swagger: '2.0'
info:
  title: Sunrise API
  description: API for managing school endpoints in Sunrise
  version: 1.0.0
host: localhost:5000
basePath: /api
schemes:
  - http
paths:
  /users:
    post:
      summary: Create a new user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/User'
      responses:
        201:
          description: User created successfully
        400:
          description: Invalid input
    get:
      summary: Get all users
      responses:
        200:
          description: A list of users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        404:
          description: No users found
  /users/{user_id}:
    get:
      summary: Get a user by ID
      parameters:
        - in: path
          name: user_id
          type: string
          required: true
          description: The ID of the user
      responses:
        200:
          description: A user
          schema:
            $ref: '#/definitions/User'
        404:
          description: User not found
    put:
      summary: Update a user by ID
      parameters:
        - in: path
          name: user_id
          type: string
          required: true
          description: The ID of the user
        - in: body
          name: body
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: User updated successfully
        404:
          description: User not found
        500:
          description: User update failed
    delete:
      summary: Delete a user by ID
      parameters:
        - in: path
          name: user_id
          type: string
          required: true
          description: The ID of the user
      responses:
        200:
          description: User deleted successfully
        404:
          description: User not found or delete failed
  /teachers:
    post:
      summary: Create a new teacher
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Teacher'
      responses:
        201:
          description: Teacher created successfully
        400:
          description: Invalid input
    get:
      summary: Get all teachers
      responses:
        200:
          description: A list of teachers
          schema:
            type: array
            items:
              $ref: '#/definitions/Teacher'
        404:
          description: No teachers found
  /teachers/{teacher_id}:
    get:
      summary: Get a teacher by ID
      parameters:
        - in: path
          name: teacher_id
          type: string
          required: true
          description: The ID of the teacher
      responses:
        200:
          description: A teacher
          schema:
            $ref: '#/definitions/Teacher'
        404:
          description: Teacher not found
    put:
      summary: Update a teacher by ID
      parameters:
        - in: path
          name: teacher_id
          type: string
          required: true
          description: The ID of the teacher
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Teacher'
      responses:
        200:
          description: Teacher updated successfully
        404:
          description: Teacher not found
        500:
          description: Teacher update failed
    delete:
      summary: Delete a teacher by ID
      parameters:
        - in: path
          name: teacher_id
          type: string
          required: true
          description: The ID of the teacher
      responses:
        200:
          description: Teacher deleted successfully
        404:
          description: Teacher not found or delete failed
definitions:
  User:
    type: object
    properties:
      firstName:
        type: string
        example: "John"
      lastName:
        type: string
        example: "Doe"
      mobile:
        type: string
        example: "+1234567890"
      email:
        type: string
        example: "john.doe@example.com"
      password:
        type: string
        example: "password123"
      userType:
        type: string
        example: "admin"
      IsActive:
        type: integer
        example: 1
  Teacher:
    type: object
    properties:
      name:
        type: string
        example: "Nashid Martines"
      age:
        type: integer
        example: 40
      gender:
        type: string
        example: "Male"
      img:
        type: string
        example: "assets/images/our-team/pic1.jpg"
      position:
        type: string
        example: "Principal"
      isActive:
        type: integer
        example: 1
      about:
        type: string
        example: "Expert in Mathematics"
      experience:
        type: string
        example: "15 years"
      subject:
        type: string
        example: "Chemistry Teacher"
      duty:
        type: string
        example: "The duties of a chemistry teacher include creating lesson plans; preparing and delivering lectures; creating and supervising laboratory activities for students; evaluating student performance; maintaining classroom records; meeting with parents, teachers, and other professionals; and participating in campus events."
